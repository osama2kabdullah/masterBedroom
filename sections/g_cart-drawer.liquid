{%- liquid
    assign NS = 'cart-drawer'
    assign cn = '#' | append: NS
    assign form_id = 'cartForm-' | append: section.id    
-%}


{%- if section.settings.enable_cart_drawer -%}
    {%- if request.design_mode -%}
        {%- for block in section.blocks -%}
            <div {{ block.shopify_attributes }} hidden></div>
        {%- endfor -%}
    {%- endif -%}
    

    {% render 'load-css', file: NS %}
    {% render 'load-css', file: 'product-card-min', lazy: true %}

    {%- capture Empty -%}
        <div class="{{ cn }}-empty">
            {%- capture Close_button -%}
                <modal-close class="{{ cn }}-modal-close">
                    {% render 'button',
                        t_text: 'general.continue_shopping'
                    %}
                </modal-close>
            {%- endcapture -%}
            {% render 'splash-msg',
                icon: 'bag-shopping',
                t_heading: 'sections.cart.empty.heading',
                t_subheading: 'sections.cart.empty.subheading',
                footer: Close_button
            %}
        </div>
    {%- endcapture -%}

    {%- capture Checkout_button -%}
        <div class="{{ cn }}-checkout  @position:{{ section.settings.checkout_position }}">
            {%- assign checkout_button_label = 'sections.cart.checkout' | t -%}
            {%- if section.settings.show_final_price_checkout_button -%}
                {%- assign final_price = cart.total_price | money -%}
                {%- capture checkout_button_label -%}
                    {{ checkout_button_label }}
                    <span class="{{ cn }}-checkout-total" data-dynamic="total-inline">{{ final_price }}</span>
                {%- endcapture -%}
            {%- endif -%}
            {% render 'button',
                text: checkout_button_label,
                block: true,
                type: 'submit',
                form: form_id,
                size: 'h3',
                display_style: 'gradient',
                name: 'checkout'
            %}
        </div>
    {%- endcapture -%}

    {%- capture Content -%}
        <form action="{{ routes.cart_url }}" method="post" novalidate id="{{ form_id }}" class="{{ cn }}-body">
            <div class="{{ cn }}-header shadow-1">
                <div class="{{ cn }}-header-inner">
                    <modal-close type="button" class="{{ cn }}-close">
                        {% render 'icon', name: 'arrow-left' %}
                    </modal-close>
                    <h2 class="{{ cn }}-heading">{{ 'sections.cart.title' | t }}</h2>
                    <div class="{{ cn }}-cart-link">
                        <a class="stretched-link" href="{{ routes.cart_url }}"></a>
                        {%- if section.settings.show_cart_counter -%}
                            {% render 'cart-counter', color: settings.color_cart_counter %}
                        {%- endif -%}
                        {% render 'icon', name: 'bag-shopping' %}
                    </div>
                    
                </div>
                {%- if section.settings.checkout_position == 'top' -%}
                    {{ Checkout_button }}
                {%- endif -%}
            </div>

            {%- if section.blocks.size > 0 -%}
            {%- for block in section.blocks -%}
                <div class="{{ cn }}-block {% if block.type == 'upsells' %}@full{% endif %}" {{ block.shopify_attributes }}>
                    {%- case block.type -%}
                        {%- when 'banner' -%}
                        {%- liquid
                            assign position = block.settings.text_position | split: '-'
                            assign caption_y = position[0]
                            assign caption_x = position[1]
                        -%}
                            {% render 'gallery-card',
                                image: block.settings.image,
                                heading: block.settings.heading,
                                subheading: block.settings.subheading,
                                caption_y: caption_y,
                                caption_x: caption_x,
                                caption_size: 'sm',
                                subheading_position: block.settings.subheading_position,
                                inner_caption: true,
                                link: block.settings.link
                            %}
                        {%- when 'products' -%}
                            <div class="{{ cn }}-products" data-items-container data-dynamic="items">
                                {%- for cart_product in cart.items -%}
                                    {%- liquid 
                                        assign max_qty = false
                                        assign track_qty = true
                                        if cart_product.variant.inventory_management == nil or cart_product.variant.inventory_policy == 'continue'
                                            assign track_qty = false
                                        endif
                                        if track_qty
                                            assign cart_product_count = cart | item_count_for_variant: cart_product.variant_id
                                            if cart_product_count == cart_product.variant.inventory_quantity
                                                assign max_qty = true
                                            endif
                                        endif
                                    -%}
                                    <div class="{{ cn }}-product shadow-1 {% if section.settings.show_stock_alert %}@show-stock-alert{% endif %}" data-item-key="{{ cart_product.key }}">
                                        {%- capture Remove_button -%}
                                            {%- if block.settings.show_remove_button -%}
                                                <{{NS}}-qty-button
                                                    class="{{ cn }}-product-remove"
                                                    variant-id="{{ cart_product.variant.id }}"
                                                    selling-plan-id="{{ cart_product.selling_plan_allocation.selling_plan.id }}"
                                                    set-value="0"
                                                    key="{{ cart_product.key }}"
                                                    section-id="{{ section.id }}"
                                                >
                                                    {% render 'icon', name: 'x' %}
                                                </{{NS}}-qty-button>
                                            {%- endif -%}
                                        {%- endcapture -%}
                                        {%- capture Qty_control -%}
                                            <div class="{{ cn }}-product-qty-adjust">
                                                <{{NS}}-qty-button
                                                    class="{{ cn }}-product-qty-button @type:minus"
                                                    variant-id="{{ cart_product.variant.id }}"
                                                    selling-plan-id="{{ cart_product.selling_plan_allocation.selling_plan.id }}"
                                                    set-value="{{ cart_product.quantity | minus: 1 }}"
                                                    key="{{ cart_product.key }}"
                                                    section-id="{{ section.id }}"
                                                >{% render 'icon', name: 'minus' %}</{{NS}}-qty-button>
                                                <span class="{{ cn }}-product-qty">{{ cart_product.quantity }}</span>
                                                <{{NS}}-qty-button
                                                    {% if max_qty %}disabled{% endif %} 
                                                    class="{{ cn }}-product-qty-button @type:plus {% if max_qty %}@disabled{% endif %} "
                                                    variant-id="{{ cart_product.variant.id }}"
                                                    selling-plan-id="{{ cart_product.selling_plan_allocation.selling_plan.id }}"
                                                    set-value="{{ cart_product.quantity | plus: 1 }}"
                                                    key="{{ cart_product.key }}"
                                                    section-id="{{ section.id }}"
                                                >{% render 'icon', name: 'plus' %}</{{NS}}-qty-button>
                                            </div>
                                            {%- if max_qty -%}
                                                <div class="{{ cn }}-product-qty-max-note">
                                                    {% render 'icon', name: 'exclamation' %}
                                                    <span>{{ 'general.cart.qty_max_note' | t }}</span>
                                                </div>
                                            {%- endif -%}
                                        {%- endcapture -%}
                                        {%- capture Product_info -%}
                                            <div class="{{ cn }}-product-info">
                                                {% if cart_product.line_level_discount_allocations.size > 0 %}
                                                    <ul class="{{ cn }}-product-discounts">
                                                        {% for discount in cart_product.line_level_discount_allocations %}
                                                            <li class="{{ cn }}-product-discounts-item">{% render 'icon', name: 'tag' %} {{ discount.discount_application.title }}</li>
                                                        {% endfor %}
                                                    </ul>
                                                {% endif %}
                                                {%- if item.selling_plan_allocation != nil -%}
                                                    <p class="{{ cn }}-product-selling-plan">{{ item.selling_plan_allocation.selling_plan.name }}</p>
                                                {%- endif -%}
                                            </div>
                                        {%- endcapture -%}
                                        {%- capture Input -%}
                                            <input
                                                type="hidden"
                                                name="updates[]"
                                                value="{{ cart_product.quantity | escape }}"
                                                form="{{ form_id }}"
                                                id="Quantity-{{ cart_product.variant.id }}"
                                            >
                                        {%- endcapture -%}
                                        {% render 'product-card-min',
                                            cart_line_item: cart_product,
                                            product: cart_product.product,
                                            variant: cart_product.variant,
                                            actions: Qty_control,
                                            after_heading: Remove_button,
                                            body: Product_info,
                                            before: Input,
                                            max_qty: max_qty,
                                            track_qty: track_qty
                                        %}
                                    </div>
                                {%- endfor -%}
                            </div>                                                            
                        {%- when 'subtotal' -%}
                            {%- liquid
                                if cart.total_price != cart.original_total_price
                                    assign has_discount = true
                                    assign subtotal_title = 'sections.cart.new_subtotal' | t
                                else
                                    assign has_discount = false
                                    assign subtotal_title = 'sections.cart.subtotal' | t
                                endif   
                            -%}
                            <div class="{{ cn }}-subtotal" data-total data-dynamic="total">
                                {%- if has_discount -%}
                                    <div class="{{ cn }}-subtotal-item">
                                        <h5 class="{{ cn }}-subtotal-item-title">
                                            {{ 'sections.cart.subtotal' | t }}
                                        </h5>
                                        <h5 class="{{ cn }}-subtotal-item-spacer"></h5>
                                        <h5 class="{{ cn }}-subtotal-item-price">
                                            {{ cart.original_total_price | money }}
                                        </h5>
                                    </div>
                                    <div class="{{ cn }}-subtotal-item">
                                        <h5 class="{{ cn }}-subtotal-item-title">
                                            {{ 'customer.order.discount' | t }}
                                        </h5>
                                        <h5 class="{{ cn }}-subtotal-item-spacer"></h5>
                                        <h5 class="{{ cn }}-subtotal-item-price">
                                            -{{ cart.total_discount | money }}
                                        </h5>
                                    </div>    
                                {%- endif -%}
                                <div class="{{ cn }}-subtotal-item @final">
                                    <h5 class="{{ cn }}-subtotal-item-title">
                                        {{ subtotal_title }}
                                    </h5>
                                    <h5 class="{{ cn }}-subtotal-item-spacer"></h5>
                                    <h5 class="{{ cn }}-subtotal-item-price">
                                        {{ cart.total_price | money }}
                                    </h5>
                                </div>
                                <div class="{{ cn }}-subtotal-tax-note">
                                    {%- if cart.taxes_included and shop.shipping_policy.body != blank -%}
                                        {{ 'sections.cart.taxes_included_and_shipping_policy_html' | t: link: shop.shipping_policy.url }}
                                    {%- elsif cart.taxes_included -%}
                                        {{ 'sections.cart.taxes_included_but_shipping_at_checkout' | t }}
                                    {%- elsif shop.shipping_policy.body != blank -%}
                                        {{ 'sections.cart.taxes_and_shipping_policy_at_checkout_html' | t: link: shop.shipping_policy.url }}
                                    {%- else -%}
                                        {{ 'sections.cart.taxes_and_shipping_at_checkout' | t }}
                                    {%- endif -%}
                                </div>
                            </div>
                        {%- when 'order_notes' -%}
                            <h5 class="{{ cn }}-order-notes-heading">
                                {{ 'sections.cart.note' | t }}
                            </h5>
                            <textarea class="{{ cn }}-order-notes-input" name="note" id="CartOrderNote" cols="30" rows="6"></textarea>
                        {%- when 'free_shipping' -%}
                            <div data-free-shipping data-dynamic="free-shipping">
                                {% render 'free-shipping-progress-bar' %}
                            </div>
                        {%- when 'upsells' -%}
                            <div class="{{ cn }}-upsells" data-dynamic="upsells">
                                {%- render 'cart-notification-recommendations',
                                    product_id: cart.items.first.product.id,
                                    recommendations_per_view: 1.3
                                -%}
                            </div>

                    {%- endcase -%}
                </div>
            {%- endfor -%}
            {%- else -%}
                {%- if request.design_mode -%}
                    <div class="editor-cart-drawer-no-blocks">
                        {% render 'editor-notification',
                            t_heading: 'general.editor.cart_drawer_no_blocks'
                        %}
                    </div>
                {%- endif -%}
            {%- endif -%}
            {%- if section.settings.checkout_position == 'bottom'-%}
                {{ Checkout_button }}
            {%- endif -%}
        </form>
    {%- endcapture -%}
   
    <template id="cart-drawer-stash">
        {% render 'load-css', file: NS %}
        <{{ NS }} class="{{ cn }} {% if cart == empty %}!empty{% endif %}" section-id="{{ section.id }}">
            <template data-product-loading-template>
                <div class="{{ cn }}-product-loading">
                    {% render 'spinner',
                        size: 'sm'
                    %}
                </div>
            </template>
            {{ Empty }}
            {{ Content }}
        </{{ NS }}>
        <script type="module" src="{{ NS | append: '.js' | asset_url }}"></script>
    </template>

    <modal-load-stash stash-id="cart-drawer" target="#cart-drawer-stash"></modal-load-stash>

    
{%- endif -%}

{%- if request.design_mode -%}
    <script type="text/json" data-{{section.id}}-settings>
        {{ section.settings | json }}
    </script>
    <script type="module">
        class EditorCartDrawer extends window.Editor {
            $trigger = document.querySelector('cart-drawer-trigger');
            events = {
                section: {
                    select: this._selectDrawer,
                    deselect: this.closeModal
                },
                block: {
                    select: this._selectDrawer,
                    deselect: this.closeModal
                }
            }
            
            _selectDrawer() {
                if (!this.sectionSettings.enable_cart_drawer) {
                    this.closeModal();
                    this.$trigger.addEventListener('click', this._moveToCartPage.bind(this));
                    return
                };

                this.$trigger.removeEventListener('click', this._moveToCartPage.bind(this));
                this.openModal({
                    stash: 'cart-drawer',
                    animation: 'slideRight',
                    position: 'center-right',
                    height: '100%',
                    width: 'min(30rem, 95vw)',
                    transition: '400'
                });
            }
            
            _moveToCartPage () {
                document.querySelector('modal-popup').remove();
                window.location.href = window.dynamicURLs.cart;
            }
        }
        const cartDrawerEditorUX = new EditorCartDrawer('{{ section.id }}');
        cartDrawerEditorUX.settingsSelector = '[data-{{section.id}}-settings]';
        cartDrawerEditorUX.render();
    </script>
{%- endif -%}

{% schema %}
{
    "name": "Cart drawer",
    "settings": [
        {
            "type": "checkbox",
            "id": "enable_cart_drawer",
            "label": "Enable",
            "default": false
        },
        {
            "type": "checkbox",
            "id": "show_final_price_checkout_button",
            "label": "Show final price on the checkout button",
            "default": false
        },
        {
            "type": "checkbox",
            "id": "show_stock_alert",
            "label": "Show stock alert",
            "default": false
        },
        {
            "type": "select",
            "id": "checkout_position",
            "label": "Checkout button position",
            "options": [
                {
                    "value": "bottom",
                    "label": "Sticky bottom"
                },
                {
                    "value": "top",
                    "label": "Top (after heading)"
                }
            ],
            "default": "bottom"
        },
        {
            "type": "header",
            "content": "Cart icon"
        },
        {
            "type": "checkbox",
            "id": "show_cart_counter",
            "label": "Show item count",
            "default": false
        }
    ],
    "blocks": [
        {
            "type": "banner",
            "name": "Promotion banner",
            "limit": 1,
            "settings": [
                {
                    "type": "image_picker",
                    "id": "image",
                    "label": "t:g.media.image"
                },
                {
                    "type": "text",
                    "id": "heading",
                    "label": "t:g.common.label.heading"
                },
                {
                    "type": "text",
                    "id": "subheading",
                    "label": "Subheading"
                },
                {
                    "type": "select",
                    "id": "text_position",
                    "label": "t:g.hero.caption.position.label",
                    "options": [
                        {
                            "value": "top-left",
                            "label": "t:g.hero.caption.position.options.x0y0"
                        },
                        {
                            "value": "top-center",
                            "label": "t:g.hero.caption.position.options.x0y1"
                        },
                        {
                            "value": "top-right",
                            "label": "t:g.hero.caption.position.options.x0y2"
                        },
                        {
                            "value": "center-left",
                            "label": "t:g.hero.caption.position.options.x1y0"
                        },
                        {
                            "value": "center-center",
                            "label": "t:g.hero.caption.position.options.x1y1"
                        },
                        {
                            "value": "center-right",
                            "label": "t:g.hero.caption.position.options.x1y2"
                        },
                        {
                            "value": "bottom-left",
                            "label": "t:g.hero.caption.position.options.x2y0"
                        },
                        {
                            "value": "bottom-center",
                            "label": "t:g.hero.caption.position.options.x2y1"
                        },
                        {
                            "value": "bottom-right",
                            "label": "t:g.hero.caption.position.options.x2y2"
                        }
                    ],
                    "default": "center-center"
                },
                {
                    "type": "select",
                    "id": "subheading_position",
                    "label": "Subheading position",
                    "options": [
                        {
                            "value": "before",
                            "label": "Before heading"
                        },
                        {
                            "value": "after",
                            "label": "After heading"
                        }
                    ],
                    "default": "before"
                },
                {
                   "type": "url",
                   "id": "link",
                   "label": "t:g.common.label.link"
                }
            ]
        },
        {
            "type": "products",
            "name": "Cart products",
            "limit": 1,
            "settings": [
                {
                    "type": "checkbox",
                    "id": "show_remove_button",
                    "label": "Show remove button",
                    "default": true
                }
            ]
        },
        {
            "type": "subtotal",
            "name": "Subtotal",
            "limit": 1
        },
        {
            "type": "free_shipping",
            "name": "Free shipping status",
            "limit": 1,
            "settings": [
                {
                    "type": "paragraph",
                    "content": "Configure your free shipping minimum amount in theme settings"
                }
            ]
        },
        {
            "type": "upsells",
            "name": "Upsells",
            "limit": 1
        },
        {
            "type": "order_notes",
            "name": "Order notes",
            "limit": 1
        },
        {
            "type": "@app"
        }
    ],
    "default": {
        "blocks": [
            {
                "type": "products"
            },
            {
                "type": "subtotal"
            }
        ]
    }
}
{% endschema %}
